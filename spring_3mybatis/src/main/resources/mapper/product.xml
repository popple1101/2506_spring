<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
   <!-- vs code 확장 프로그램 XML (XML Langauge Support by Red Hat) 설치해야 자동 완성 합니다. -->
<mapper namespace="tblproduct">
<!-- 1. VO 클래스 만들기 2. 설정파일에 mapper 와 typeAlias 추가 -->
 <!-- 기존의 TblProductDao 의 SQL 을 여기에서 작성해서 새로운 DAO 만드세요. -->
  <select id="selectByPk" parameterType="String" resultType="ProductVo">
    select * from tbl_product
    where pcode = #{pcode}
  </select>

  <select id="searchByKeyword" parameterType="String" resultType="ProductVo">
    <!-- n개 행 집합을 결과로 예상한다면 resultType 은 컬렉션 자료구조의 제너릭타입 -->
    select * from tbl_product where pname like '%' || #{keyword} || '%'
  </select>

  <insert id="insert" parameterType="ProductVo">
    insert into tbl_product (pcode,category,pname,price) values (#{pcode}, #{category, jdbcType=VARCHAR}, #{pname}, #{price})
    <!-- category 컬럼은 null 허용. 널 값 처리를 위해서 jdbcType=VARCHAR(NUMERIC) 옵션 추가-->
  </insert>

  <update id="update" parameterType="ProductVo">
    update tbl_product
    set pname = #{pname}, price = #{price}
    where pcode = #{pcode} 
  </update>

  <delete id="delete" parameterType="String"> <!-- 새로운 버전의 string 별칭 테스트 -->
    delete from tbl_product where pcode = #{pcode} 
  </delete>
</mapper>
